knitr::opts_chunk$set(echo = TRUE)
library(phyloseq) #
library(DESeq2) #
library(kableExtra) #
library(genefilter) #
library(microbiome) #
library(ggplot2)  #
library(vegan) #
library(ggpubr) #
library(ggplot2) #
library(plyr)
library(multcompView)
#####Load libraries correlations####
library(ggplot2)
library(phyloseq)
library(stringr)
library(dplyr)
#####Load libraries LR####
library(tidyverse)
library(ape)
library(ggpubr)
####Load libraries categorical histo####
library(kableExtra)
library(plyr)
library("fantaxtic")
library(data.table)
####load libraries Ratios-histo boxplots####
library(multcompView)
library(reshape)
### OTRICAS
library(plotly)
library(plyr)
library(flexdashboard)
library(shiny)
library(DT)
## FUNCTIONS
source("/Users/dvarelat/Documents/SIWA/Methods-review/functions.R")
folder <- "/Users/dvarelat/Documents/SIWA/Reports/Version1.0/Input_data/"
ODLEPobj <- readRDS(paste0(folder, "phyloseqObject_April11.rds"))
#open data-table
## Data creada con create_full_file_for_correlations_to_analytics - Jupyter Notebook
complete_sample_table <-read.table(paste0(folder, "performance_histo_ge_ratios_alphadiv_for_correlations.csv"),check.names = FALSE, header=T, sep="\t")
#EAFIT surveillance tables (same for all reports)
species_taxonomy_info <-read.csv(paste0(folder, "species_metabolic_effects.csv"),check.names = FALSE, sep=";")
genera_taxonomy_info <- read.csv(paste0(folder, "genus_metabolic_effects.csv"), check.names = FALSE, sep=";")
broad_taxonomy_info <- read.csv(paste0(folder, "broad_groups_metabolic_effects.csv"), check.names = FALSE, sep=";")
sample_data(ODLEPobj)$Treatment <- as.factor(str_replace(sample_data(ODLEPobj)$Treatment, "AlphaD3","VitD"))
sample_data(ODLEPobj)$VitDLevel <- as.factor(sample_data(ODLEPobj)$Alphalevel)
sample_data(ODLEPobj)$VitDLevel_label <- as.factor(sample_data(ODLEPobj)$Alphad3level)
#Subset phyloseq object to include only wanted treatments
ODLEPobj <- subset_samples(ODLEPobj, TreatmentNumber%in%c("1","2","3","4","5","6","7","8"))
ODLEPobj <- subset_samples(ODLEPobj, SampleID != "0074_02C-M") #REMOVE OUTLIAR
metadata <- meta(ODLEPobj)
#Filter phyloseq object by location
ODLEPobj_cecum<-subset_samples(ODLEPobj, SampleLocation=="C")
ODLEPobj_ileum<-subset_samples(ODLEPobj, SampleLocation=="I")
ODLEPobj_feces<-subset_samples(ODLEPobj, SampleLocation=="F")
metadata_cecum <- complete_sample_table[complete_sample_table$SampleLocation=="C",]
metadata_ileum<- complete_sample_table[complete_sample_table$SampleLocation=="I",]
metadata= metadata_cecum
#IL10 + alphadiv
x_label= "Observed features"
y_label= "IL10"
x <- metadata$Alfa_Observed
y <- metadata$DeltaCq_IL10
cec_IL10_Alfa_Observed= plot_regression(x, y, metadata, x_label, y_label)
#Grid 1: CECUM
metadata= metadata_cecum
#IL10 + alphadiv
x_label= "Observed features"
y_label= "IL10"
x <- metadata$Alfa_Observed
y <- metadata$DeltaCq_IL10
cec_IL10_Alfa_Observed= plot_regression(x, y, metadata, x_label, y_label)
cec_IL10_Alfa_Observed_R=get_stats_R(x, y, metadata)
plot_regression <- function(x, y, metadata, x_label, y_label) {
Model <- lm(y ~ x, data = metadata)
R2= as.character(signif(summary(Model)$r.squared,digits=3))
R2= paste("R2=", R2)
plott=ggplot(metadata, aes(x=x, y=y)) +
geom_point() +
geom_smooth(formula = y ~ x, method=lm, se=FALSE)+
annotate("text", -Inf, Inf, label = R2 , hjust = 0, vjust = 1)+
xlab(x_label) + ylab(y_label)
return(plott)
}
####function to get R2####
get_stats_R <- function(x, y, metadata) {
Model <- lm(y ~ x, data = metadata)
statR= summary(Model)$r.squared
return(statR)
}
####function to get Pval of model####
get_stats_P <- function (x, y, metadata)  {
modelobject<- lm(y ~ x, data = metadata)
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
x <- metadata$Alfa_Observed
y <- metadata$DeltaCq_IL10
cec_IL10_Alfa_Observed= plot_regression(x, y, metadata, x_label, y_label)
cec_IL10_Alfa_Observed_R=get_stats_R(x, y, metadata)
cec_IL10_Alfa_Observed_P=get_stats_P(x, y, metadata)
x_label= "Shannon diversity"
y_label= "IL10"
x <- metadata$Alfa_Shannon
y <- metadata$DeltaCq_IL10
cec_IL10_Alfa_Shannon= plot_regression(x, y, metadata, x_label, y_label)
cec_IL10_Alfa_Shannon_R=get_stats_R(x, y, metadata)
cec_IL10_Alfa_Shannon_P=get_stats_P(x, y, metadata)
#IL1B + alphadiv
x_label= "Observed features"
y_label= "IL1B"
x <- metadata$Alfa_Observed
y <- metadata$DeltaCq_IL1B
cec_IL1B_Alfa_Observed= plot_regression(x, y, metadata, x_label, y_label)
cec_IL1B_Alfa_Observed_R=get_stats_R(x, y, metadata)
cec_IL1B_Alfa_Observed_P=get_stats_P(x, y, metadata)
x_label= "Shannon diversity"
y_label= "IL1B"
x <- metadata$Alfa_Shannon
y <- metadata$DeltaCq_IL1B
cec_IL1B_Alfa_Shannon= plot_regression(x, y, metadata, x_label, y_label)
cec_IL1B_Alfa_Shannon_R=get_stats_R(x, y, metadata)
cec_IL1B_Alfa_Shannon_P=get_stats_P(x, y, metadata)
#MUC2 + alphadiv
x_label= "Observed features"
y_label= "MUC2"
x <- metadata$Alfa_Observed
y <- metadata$DeltaCq_MUC2
cec_MUC2_Alfa_Observed= plot_regression(x, y, metadata, x_label, y_label)
cec_MUC2_Alfa_Observed_R=get_stats_R(x, y, metadata)
cec_MUC2_Alfa_Observed_P=get_stats_P(x, y, metadata)
x_label= "Shannon diversity"
y_label= "MUC2"
x <- metadata$Alfa_Shannon
y <- metadata$DeltaCq_MUC2
cec_MUC2_Alfa_Shannon= plot_regression(x, y, metadata, x_label, y_label)
cec_MUC2_Alfa_Shannon_R=get_stats_R(x, y, metadata)
cec_MUC2_Alfa_Shannon_P=get_stats_P(x, y, metadata)
(cec_IL10_Alfa_Observed + cec_IL10_Alfa_Shannon +
cec_IL1B_Alfa_Observed + cec_IL1B_Alfa_Shannon +
cec_MUC2_Alfa_Observed + cec_MUC2_Alfa_Shannon)
cec_IL10_Alfa_Observed
cec_IL10_Alfa_Observed + cec_IL10_Alfa_Shannon +
cec_IL1B_Alfa_Observed + cec_IL1B_Alfa_Shannon +
cec_MUC2_Alfa_Observed + cec_MUC2_Alfa_Shannon
cec_IL10_Alfa_Observed + cec_IL10_Alfa_Shannon + cec_IL1B_Alfa_Observed + cec_IL1B_Alfa_Shannon +  cec_MUC2_Alfa_Observed + cec_MUC2_Alfa_Shannon
cec_IL10_Alfa_Shannon
cec_IL1B_Alfa_Observed
cec_IL1B_Alfa_Shannon
cec_MUC2_Alfa_Observed
library(patchwork)
cec_IL10_Alfa_Observed + cec_IL10_Alfa_Shannon + cec_IL1B_Alfa_Observed + cec_IL1B_Alfa_Shannon +  cec_MUC2_Alfa_Observed + cec_MUC2_Alfa_Shannon
cec_IL10_Alfa_Observed + cec_IL1B_Alfa_Observed + cec_MUC2_Alfa_Observed +
cec_IL10_Alfa_Shannon  + cec_IL1B_Alfa_Shannon  + cec_MUC2_Alfa_Shannon
gird_cecum=ggarrange(cec_IL10_Alfa_Observed, cec_IL10_Alfa_Shannon,
cec_IL1B_Alfa_Observed, cec_IL1B_Alfa_Shannon,
cec_MUC2_Alfa_Observed,cec_MUC2_Alfa_Shannon,
ncol = 2, nrow = 3)
gird_cecum_gene_aplhadiv= annotate_figure(gird_cecum)
class(gird_cecum)
gird_cecum_gene_aplhadiv
gird_cecum_gene_aplhadiv= annotate_figure(gird_cecum)
class(gird_cecum_gene_aplhadiv)
library(stringr)
